#!/bin/bash

source configure.in

function unknown_option {
    echo "Unknown option: $1"
    echo "Run ./configure --help to get help"
    exit 1
}

function run_clean {
    read -n 1 -s -p "Are you sure to delete release/debug builds? [y/n]
" yesorno;
    if [ "$yesorno" == "y" ]; then
        echo "Removing release and debug builds"
        rm -rf $RELEASE_DIR $DEBUG_DIR
    fi
    exit 0
}

CXXFLAGS="$CXXFLAGS \
  -DCUDA_ROOT=$CUDA_ROOT \
  -DCUDNN_ROOT=$CUDNN_ROOT \
  -DEXTERN_LIB_PATH=$EXTERN_LIB_PATH \
  -DEXTERN_INCLUDE_PATH=$EXTERN_INCLUDE_PATH \
  -DPython_ADDITIONAL_VERSIONS=$PYTHON_VERSION"


RELEASE_TYPE=Release

while [[ $# -gt 0 ]]; do
  case $1 in
    --help | -h)
      WANT_HELP=yes ;;
    -c | --clean)
      run_clean ;;
    --build-debug)
      BUILD_DEBUG="ON";;
    --build-apps)
      CXXFLAGS="$CXXFLAGS -DBUILD_CXX_APPS=ON";;
    --build-tests)
      CXXFLAGS="$CXXFLAGS -DBUILD_TESTS=ON";;
    --enable-debug-info)
      RELEASE_TYPE=RelWithDebInfo;;
    --enable-ps)
      CXXFLAGS="$CXXFLAGS -DENABLE_PS=ON";;
    --disable-cuda)
      CXXFLAGS="$CXXFLAGS -DENABLE_CUDA=OFF";;
    --disable-owl)
      CXXFLAGS="$CXXFLAGS -DBUILD_OWL=OFF";;
    --with-blas)
      CXXFLAGS="$CXXFLAGS -DENABLE_BLAS=ON";;
    --prefix=*)
      CXXFLAGS="$CXXFLAGS -DCMAKE_INSTALL_PREFIX=`expr "x$1" : "x--prefix=\(.*\)"`";;
    -D)
      CXXFLAGS="$CXXFLAGS -D$2=ON"; shift ;;
    -D*)
      CXXFLAGS="$CXXFLAGS -D`expr "x$1" : "x-D\(.*\)"`" ;;
    *)
      unknown_option $1 ;;
  esac
  shift
done


echo $CXXFLAGS

#CXXFLAGS="${CXXFLAGS} -DDISABLE_PS=${DISABLE_PS} -DDISABLE_CUDA=${DISABLE_CUDA}"

#================================ help description =============================
if test "x$WANT_HELP" = xyes; then
    cat <<EOF
Usage: ./configure [OPTION]...
Configurations:
    -h, --help              Display this help and exit
    -c, --clean             Clean up debug and release build
    --build-debug           Enable building debug version
    --build-apps            Enable building cxx applications
    --build-tests           Enable building unit tests
    --enable-debug-info     Enable building with debug info even for release
    --enable-ps             Enable building with PS
    --disable-cuda          Disable building with CUDA
    --disable-owl           Disable building with OWL (python binding)
    --with-blas		    Use BLAS library for cpu operations
    --prefix                Specify install path
    -Dvar=value | -D value  Specify definitions to be passed on to CMake
EOF
exit 0;
fi
#===============================================================================

#================================ main configuration =============================
echo -e "========================== Release =========================="
if [ ! -d $RELEASE_DIR ]; then
    mkdir $RELEASE_DIR
fi
cd $RELEASE_DIR
CC=$C_COMPILER CXX=$CXX_COMPILER cmake -DCMAKE_BUILD_TYPE=${RELEASE_TYPE} $CXXFLAGS ..
cd ..

if test "$BUILD_DEBUG" = ON; then
    echo -e "\n========================== Debug =========================="
    if [ ! -d $DEBUG_DIR ]; then
        mkdir $DEBUG_DIR
    fi
    cd $DEBUG_DIR
    CC=$C_COMPILER CXX=$CXX_COMPILER cmake -DCMAKE_BUILD_TYPE=Debug $CXXFLAGS ..
    cd ..
fi
